"""abc

Revision ID: 744a0698c3a3
Revises: 
Create Date: 2018-05-01 22:41:11.890199

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '744a0698c3a3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('activity', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('num_mem', sa.Integer(), nullable=True),
    sa.Column('creator', sa.String(length=100), nullable=True),
    sa.Column('when', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_groups_when'), 'groups', ['when'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=150), nullable=True),
    sa.Column('pno', sa.String(length=20), nullable=True),
    sa.Column('password', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_name'), 'user', ['name'], unique=False)
    op.create_index(op.f('ix_user_pno'), 'user', ['pno'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('balance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payerID', sa.Integer(), nullable=True),
    sa.Column('receiverID', sa.Integer(), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['payerID'], ['user.id'], ),
    sa.ForeignKeyConstraint(['receiverID'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_balance_timestamp'), 'balance', ['timestamp'], unique=False)
    op.create_table('friends',
    sa.Column('userID', sa.Integer(), nullable=True),
    sa.Column('friendID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['friendID'], ['user.id'], ),
    sa.ForeignKeyConstraint(['userID'], ['user.id'], )
    )
    op.create_table('group_helper_table',
    sa.Column('userID', sa.Integer(), nullable=True),
    sa.Column('groupID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['groupID'], ['groups.id'], ),
    sa.ForeignKeyConstraint(['userID'], ['user.id'], )
    )
    op.create_table('group_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('desc', sa.String(length=100), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('added_by', sa.String(length=100), nullable=True),
    sa.Column('grp', sa.Integer(), nullable=True),
    sa.Column('tot', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['grp'], ['groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_group_transactions_timestamp'), 'group_transactions', ['timestamp'], unique=False)
    op.create_table('group_settle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('giverID', sa.Integer(), nullable=True),
    sa.Column('receiverID', sa.Integer(), nullable=True),
    sa.Column('amt', sa.Float(), nullable=True),
    sa.Column('groupID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['giverID'], ['user.id'], ),
    sa.ForeignKeyConstraint(['groupID'], ['group_transactions.id'], ),
    sa.ForeignKeyConstraint(['receiverID'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tpay',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('p', sa.String(length=150), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['p'], ['user.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['group_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tshare',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('p', sa.String(length=150), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['p'], ['user.id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['group_transactions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tshare')
    op.drop_table('tpay')
    op.drop_table('group_settle')
    op.drop_index(op.f('ix_group_transactions_timestamp'), table_name='group_transactions')
    op.drop_table('group_transactions')
    op.drop_table('group_helper_table')
    op.drop_table('friends')
    op.drop_index(op.f('ix_balance_timestamp'), table_name='balance')
    op.drop_table('balance')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_pno'), table_name='user')
    op.drop_index(op.f('ix_user_name'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_groups_when'), table_name='groups')
    op.drop_table('groups')
    op.drop_table('activity_log')
    # ### end Alembic commands ###
